
package org.example

    fun main() {
        println(3.isGreater(9)) // Функция-расширение для типа Int
        // Вывод false
        println(12.isGreater(9)) // Функция-расширение для типа Int
        // Вывод true
        println(3 isGreaterInfix 9) // Функция-расширение для типа Int используя ключевое слово infix
        // Вывод false
        println(20 isGreaterInfix 3) // Функция-расширение для типа Int используя ключевое слово infix
        // Вывод true

        println("Kotlin" isLongerThan 3)
        // Вывод true
        println("Hi" isLongerThan 3)
        // Вывод false
    }
    // Вот как можно создать функцию-расширение для типа Int,
    // которая будет сравнивать значение с аргументом, используя обычный способ
    // Функция-расширение для типа Int, проверяющая, больше ли значение аргумента
    fun Int.isGreater(value: Int): Boolean {
        return this > value
    }
    // Теперь перепишем эту функцию, используя ключевое слово infix
    infix fun Int.isGreaterInfix(value: Int): Boolean {
        return this > value
    }

    // Определение функции-расширения:
    // Используем ключевое слово infix перед определением функции-расширения.
    // Функция принимает один параметр value типа Int.
    // Функция возвращает true, если значение объекта больше значения аргумента, и false в противном случае.

    // Вызов функции:
    // Когда функция объявлена с ключевым словом infix, ее можно вызывать без использования точки и круглых скобок.
    // Это позволяет писать код в более естественной форме: 3 isGreater 9.

    // Функция-расширение для типа String с ключевым словом infix
    infix fun String.isLongerThan(length: Int): Boolean {
        return this.length > length
    }
    // Определение функции-расширения для String:
    // Используем ключевое слово infix перед определением функции-расширения.
    // Функция принимает один параметр length типа Int.
    // Функция возвращает true, если длина строки больше значения аргумента, и false в противном случае.
    // Вызов функции:
    // Функцию можно вызывать в более естественной форме: "Kotlin" isLongerThan 3.